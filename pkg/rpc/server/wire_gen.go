// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"github.com/aquasecurity/fanal/applier"
	"github.com/aquasecurity/fanal/cache"
	"github.com/khulnasoft-lab/vul-db/pkg/db"
	db2 "github.com/khulnasoft-lab/vul/pkg/db"
	"github.com/khulnasoft-lab/vul/pkg/detector/ospkg"
	"github.com/khulnasoft-lab/vul/pkg/github"
	"github.com/khulnasoft-lab/vul/pkg/indicator"
	"github.com/khulnasoft-lab/vul/pkg/result"
	"github.com/khulnasoft-lab/vul/pkg/scanner/local"
	"github.com/spf13/afero"
	"k8s.io/utils/clock"
)

// Injectors from inject.go:

func initializeScanServer(localArtifactCache cache.LocalArtifactCache) *ScanServer {
	applierApplier := applier.NewApplier(localArtifactCache)
	detector := ospkg.Detector{}
	scanner := local.NewScanner(applierApplier, detector)
	config := db.Config{}
	client := result.NewClient(config)
	scanServer := NewScanServer(scanner, client)
	return scanServer
}

func initializeDBWorker(cacheDir string, quiet bool) dbWorker {
	config := db.Config{}
	client := github.NewClient()
	progressBar := indicator.NewProgressBar(quiet)
	realClock := clock.RealClock{}
	fs := afero.NewOsFs()
	metadata := db2.NewMetadata(fs, cacheDir)
	dbClient := db2.NewClient(config, client, progressBar, realClock, metadata)
	serverDbWorker := newDBWorker(dbClient)
	return serverDbWorker
}
